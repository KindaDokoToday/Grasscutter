// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: define.proto

package io.grasscutter.net.proto.define;

public interface HENGHIEEKGJOrBuilder extends
    // @@protoc_insertion_point(interface_extends:HENGHIEEKGJ)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>repeated uint32 OLMNNNCOJGJ = 9;</code>
   * @return A list containing the oLMNNNCOJGJ.
   */
  java.util.List<java.lang.Integer> getOLMNNNCOJGJList();
  /**
   * <code>repeated uint32 OLMNNNCOJGJ = 9;</code>
   * @return The count of oLMNNNCOJGJ.
   */
  int getOLMNNNCOJGJCount();
  /**
   * <code>repeated uint32 OLMNNNCOJGJ = 9;</code>
   * @param index The index of the element to return.
   * @return The oLMNNNCOJGJ at the given index.
   */
  int getOLMNNNCOJGJ(int index);

  /**
   * <code>repeated uint32 OJCMFCLKCGO = 8;</code>
   * @return A list containing the oJCMFCLKCGO.
   */
  java.util.List<java.lang.Integer> getOJCMFCLKCGOList();
  /**
   * <code>repeated uint32 OJCMFCLKCGO = 8;</code>
   * @return The count of oJCMFCLKCGO.
   */
  int getOJCMFCLKCGOCount();
  /**
   * <code>repeated uint32 OJCMFCLKCGO = 8;</code>
   * @param index The index of the element to return.
   * @return The oJCMFCLKCGO at the given index.
   */
  int getOJCMFCLKCGO(int index);

  /**
   * <code>uint32 owner_entity_id = 4;</code>
   * @return The ownerEntityId.
   */
  int getOwnerEntityId();

  /**
   * <code>uint32 camp_type = 2;</code>
   * @return The campType.
   */
  int getCampType();

  /**
   * <code>uint32 camp_id = 1;</code>
   * @return The campId.
   */
  int getCampId();

  /**
   * <code>bool is_peer_id_from_player = 7;</code>
   * @return The isPeerIdFromPlayer.
   */
  boolean getIsPeerIdFromPlayer();

  /**
   * <code>bool ODMKHDAKIDH = 6;</code>
   * @return The oDMKHDAKIDH.
   */
  boolean getODMKHDAKIDH();

  /**
   * <code>uint32 target_entity_id = 5;</code>
   * @return The targetEntityId.
   */
  int getTargetEntityId();

  /**
   * <code>uint64 guid = 3;</code>
   * @return The guid.
   */
  long getGuid();
}
