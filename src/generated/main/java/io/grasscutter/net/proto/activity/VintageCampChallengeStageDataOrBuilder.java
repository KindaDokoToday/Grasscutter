// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: activity.proto

package io.grasscutter.net.proto.activity;

public interface VintageCampChallengeStageDataOrBuilder extends
    // @@protoc_insertion_point(interface_extends:VintageCampChallengeStageData)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>map&lt;uint32, .VintageCampChallengeLevelData&gt; camp_level_map = 4;</code>
   */
  int getCampLevelMapCount();
  /**
   * <code>map&lt;uint32, .VintageCampChallengeLevelData&gt; camp_level_map = 4;</code>
   */
  boolean containsCampLevelMap(
      int key);
  /**
   * Use {@link #getCampLevelMapMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, io.grasscutter.net.proto.activity.VintageCampChallengeLevelData>
  getCampLevelMap();
  /**
   * <code>map&lt;uint32, .VintageCampChallengeLevelData&gt; camp_level_map = 4;</code>
   */
  java.util.Map<java.lang.Integer, io.grasscutter.net.proto.activity.VintageCampChallengeLevelData>
  getCampLevelMapMap();
  /**
   * <code>map&lt;uint32, .VintageCampChallengeLevelData&gt; camp_level_map = 4;</code>
   */

  io.grasscutter.net.proto.activity.VintageCampChallengeLevelData getCampLevelMapOrDefault(
      int key,
      io.grasscutter.net.proto.activity.VintageCampChallengeLevelData defaultValue);
  /**
   * <code>map&lt;uint32, .VintageCampChallengeLevelData&gt; camp_level_map = 4;</code>
   */

  io.grasscutter.net.proto.activity.VintageCampChallengeLevelData getCampLevelMapOrThrow(
      int key);

  /**
   * <code>uint32 stage_id = 9;</code>
   * @return The stageId.
   */
  int getStageId();

  /**
   * <code>uint32 open_time = 12;</code>
   * @return The openTime.
   */
  int getOpenTime();

  /**
   * <code>uint32 max_finished_level = 10;</code>
   * @return The maxFinishedLevel.
   */
  int getMaxFinishedLevel();

  /**
   * <code>bool is_finish = 2;</code>
   * @return The isFinish.
   */
  boolean getIsFinish();

  /**
   * <code>bool is_open = 1;</code>
   * @return The isOpen.
   */
  boolean getIsOpen();
}
