// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scene.proto

package io.grasscutter.net.proto.scene;

/**
 * <pre>
 * CmdId: 23089
 * </pre>
 *
 * Protobuf type {@code SceneAreaWeatherNotify}
 */
public final class SceneAreaWeatherNotify extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:SceneAreaWeatherNotify)
    SceneAreaWeatherNotifyOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SceneAreaWeatherNotify.newBuilder() to construct.
  private SceneAreaWeatherNotify(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SceneAreaWeatherNotify() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SceneAreaWeatherNotify();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SceneAreaWeatherNotify(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 50: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              weatherValueMap_ = com.google.protobuf.MapField.newMapField(
                  WeatherValueMapDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000001;
            }
            com.google.protobuf.MapEntry<java.lang.Integer, java.lang.String>
            weatherValueMap__ = input.readMessage(
                WeatherValueMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            weatherValueMap_.getMutableMap().put(
                weatherValueMap__.getKey(), weatherValueMap__.getValue());
            break;
          }
          case 80: {

            weatherGadgetId_ = input.readUInt32();
            break;
          }
          case 88: {

            weatherAreaId_ = input.readUInt32();
            break;
          }
          case 104: {

            climateType_ = input.readUInt32();
            break;
          }
          case 125: {

            transDuration_ = input.readFloat();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.grasscutter.net.proto.scene.Scene.internal_static_SceneAreaWeatherNotify_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 6:
        return internalGetWeatherValueMap();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.grasscutter.net.proto.scene.Scene.internal_static_SceneAreaWeatherNotify_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.grasscutter.net.proto.scene.SceneAreaWeatherNotify.class, io.grasscutter.net.proto.scene.SceneAreaWeatherNotify.Builder.class);
  }

  public static final int WEATHER_VALUE_MAP_FIELD_NUMBER = 6;
  private static final class WeatherValueMapDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.Integer, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.Integer, java.lang.String>newDefaultInstance(
                io.grasscutter.net.proto.scene.Scene.internal_static_SceneAreaWeatherNotify_WeatherValueMapEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.UINT32,
                0,
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapField<
      java.lang.Integer, java.lang.String> weatherValueMap_;
  private com.google.protobuf.MapField<java.lang.Integer, java.lang.String>
  internalGetWeatherValueMap() {
    if (weatherValueMap_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          WeatherValueMapDefaultEntryHolder.defaultEntry);
    }
    return weatherValueMap_;
  }

  public int getWeatherValueMapCount() {
    return internalGetWeatherValueMap().getMap().size();
  }
  /**
   * <code>map&lt;uint32, string&gt; weather_value_map = 6;</code>
   */

  @java.lang.Override
  public boolean containsWeatherValueMap(
      int key) {
    
    return internalGetWeatherValueMap().getMap().containsKey(key);
  }
  /**
   * Use {@link #getWeatherValueMapMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, java.lang.String> getWeatherValueMap() {
    return getWeatherValueMapMap();
  }
  /**
   * <code>map&lt;uint32, string&gt; weather_value_map = 6;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.Integer, java.lang.String> getWeatherValueMapMap() {
    return internalGetWeatherValueMap().getMap();
  }
  /**
   * <code>map&lt;uint32, string&gt; weather_value_map = 6;</code>
   */
  @java.lang.Override

  public java.lang.String getWeatherValueMapOrDefault(
      int key,
      java.lang.String defaultValue) {
    
    java.util.Map<java.lang.Integer, java.lang.String> map =
        internalGetWeatherValueMap().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;uint32, string&gt; weather_value_map = 6;</code>
   */
  @java.lang.Override

  public java.lang.String getWeatherValueMapOrThrow(
      int key) {
    
    java.util.Map<java.lang.Integer, java.lang.String> map =
        internalGetWeatherValueMap().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int TRANS_DURATION_FIELD_NUMBER = 15;
  private float transDuration_;
  /**
   * <code>float trans_duration = 15;</code>
   * @return The transDuration.
   */
  @java.lang.Override
  public float getTransDuration() {
    return transDuration_;
  }

  public static final int WEATHER_GADGET_ID_FIELD_NUMBER = 10;
  private int weatherGadgetId_;
  /**
   * <code>uint32 weather_gadget_id = 10;</code>
   * @return The weatherGadgetId.
   */
  @java.lang.Override
  public int getWeatherGadgetId() {
    return weatherGadgetId_;
  }

  public static final int CLIMATE_TYPE_FIELD_NUMBER = 13;
  private int climateType_;
  /**
   * <code>uint32 climate_type = 13;</code>
   * @return The climateType.
   */
  @java.lang.Override
  public int getClimateType() {
    return climateType_;
  }

  public static final int WEATHER_AREA_ID_FIELD_NUMBER = 11;
  private int weatherAreaId_;
  /**
   * <code>uint32 weather_area_id = 11;</code>
   * @return The weatherAreaId.
   */
  @java.lang.Override
  public int getWeatherAreaId() {
    return weatherAreaId_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    com.google.protobuf.GeneratedMessageV3
      .serializeIntegerMapTo(
        output,
        internalGetWeatherValueMap(),
        WeatherValueMapDefaultEntryHolder.defaultEntry,
        6);
    if (weatherGadgetId_ != 0) {
      output.writeUInt32(10, weatherGadgetId_);
    }
    if (weatherAreaId_ != 0) {
      output.writeUInt32(11, weatherAreaId_);
    }
    if (climateType_ != 0) {
      output.writeUInt32(13, climateType_);
    }
    if (transDuration_ != 0F) {
      output.writeFloat(15, transDuration_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (java.util.Map.Entry<java.lang.Integer, java.lang.String> entry
         : internalGetWeatherValueMap().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.Integer, java.lang.String>
      weatherValueMap__ = WeatherValueMapDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, weatherValueMap__);
    }
    if (weatherGadgetId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(10, weatherGadgetId_);
    }
    if (weatherAreaId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(11, weatherAreaId_);
    }
    if (climateType_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(13, climateType_);
    }
    if (transDuration_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(15, transDuration_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.grasscutter.net.proto.scene.SceneAreaWeatherNotify)) {
      return super.equals(obj);
    }
    io.grasscutter.net.proto.scene.SceneAreaWeatherNotify other = (io.grasscutter.net.proto.scene.SceneAreaWeatherNotify) obj;

    if (!internalGetWeatherValueMap().equals(
        other.internalGetWeatherValueMap())) return false;
    if (java.lang.Float.floatToIntBits(getTransDuration())
        != java.lang.Float.floatToIntBits(
            other.getTransDuration())) return false;
    if (getWeatherGadgetId()
        != other.getWeatherGadgetId()) return false;
    if (getClimateType()
        != other.getClimateType()) return false;
    if (getWeatherAreaId()
        != other.getWeatherAreaId()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (!internalGetWeatherValueMap().getMap().isEmpty()) {
      hash = (37 * hash) + WEATHER_VALUE_MAP_FIELD_NUMBER;
      hash = (53 * hash) + internalGetWeatherValueMap().hashCode();
    }
    hash = (37 * hash) + TRANS_DURATION_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getTransDuration());
    hash = (37 * hash) + WEATHER_GADGET_ID_FIELD_NUMBER;
    hash = (53 * hash) + getWeatherGadgetId();
    hash = (37 * hash) + CLIMATE_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getClimateType();
    hash = (37 * hash) + WEATHER_AREA_ID_FIELD_NUMBER;
    hash = (53 * hash) + getWeatherAreaId();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.grasscutter.net.proto.scene.SceneAreaWeatherNotify parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.grasscutter.net.proto.scene.SceneAreaWeatherNotify parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.grasscutter.net.proto.scene.SceneAreaWeatherNotify parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.grasscutter.net.proto.scene.SceneAreaWeatherNotify parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.grasscutter.net.proto.scene.SceneAreaWeatherNotify parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.grasscutter.net.proto.scene.SceneAreaWeatherNotify parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.grasscutter.net.proto.scene.SceneAreaWeatherNotify parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.grasscutter.net.proto.scene.SceneAreaWeatherNotify parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.grasscutter.net.proto.scene.SceneAreaWeatherNotify parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.grasscutter.net.proto.scene.SceneAreaWeatherNotify parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.grasscutter.net.proto.scene.SceneAreaWeatherNotify parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.grasscutter.net.proto.scene.SceneAreaWeatherNotify parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.grasscutter.net.proto.scene.SceneAreaWeatherNotify prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * CmdId: 23089
   * </pre>
   *
   * Protobuf type {@code SceneAreaWeatherNotify}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:SceneAreaWeatherNotify)
      io.grasscutter.net.proto.scene.SceneAreaWeatherNotifyOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.grasscutter.net.proto.scene.Scene.internal_static_SceneAreaWeatherNotify_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 6:
          return internalGetWeatherValueMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 6:
          return internalGetMutableWeatherValueMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.grasscutter.net.proto.scene.Scene.internal_static_SceneAreaWeatherNotify_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.grasscutter.net.proto.scene.SceneAreaWeatherNotify.class, io.grasscutter.net.proto.scene.SceneAreaWeatherNotify.Builder.class);
    }

    // Construct using io.grasscutter.net.proto.scene.SceneAreaWeatherNotify.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      internalGetMutableWeatherValueMap().clear();
      transDuration_ = 0F;

      weatherGadgetId_ = 0;

      climateType_ = 0;

      weatherAreaId_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.grasscutter.net.proto.scene.Scene.internal_static_SceneAreaWeatherNotify_descriptor;
    }

    @java.lang.Override
    public io.grasscutter.net.proto.scene.SceneAreaWeatherNotify getDefaultInstanceForType() {
      return io.grasscutter.net.proto.scene.SceneAreaWeatherNotify.getDefaultInstance();
    }

    @java.lang.Override
    public io.grasscutter.net.proto.scene.SceneAreaWeatherNotify build() {
      io.grasscutter.net.proto.scene.SceneAreaWeatherNotify result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.grasscutter.net.proto.scene.SceneAreaWeatherNotify buildPartial() {
      io.grasscutter.net.proto.scene.SceneAreaWeatherNotify result = new io.grasscutter.net.proto.scene.SceneAreaWeatherNotify(this);
      int from_bitField0_ = bitField0_;
      result.weatherValueMap_ = internalGetWeatherValueMap();
      result.weatherValueMap_.makeImmutable();
      result.transDuration_ = transDuration_;
      result.weatherGadgetId_ = weatherGadgetId_;
      result.climateType_ = climateType_;
      result.weatherAreaId_ = weatherAreaId_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.grasscutter.net.proto.scene.SceneAreaWeatherNotify) {
        return mergeFrom((io.grasscutter.net.proto.scene.SceneAreaWeatherNotify)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.grasscutter.net.proto.scene.SceneAreaWeatherNotify other) {
      if (other == io.grasscutter.net.proto.scene.SceneAreaWeatherNotify.getDefaultInstance()) return this;
      internalGetMutableWeatherValueMap().mergeFrom(
          other.internalGetWeatherValueMap());
      if (other.getTransDuration() != 0F) {
        setTransDuration(other.getTransDuration());
      }
      if (other.getWeatherGadgetId() != 0) {
        setWeatherGadgetId(other.getWeatherGadgetId());
      }
      if (other.getClimateType() != 0) {
        setClimateType(other.getClimateType());
      }
      if (other.getWeatherAreaId() != 0) {
        setWeatherAreaId(other.getWeatherAreaId());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.grasscutter.net.proto.scene.SceneAreaWeatherNotify parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.grasscutter.net.proto.scene.SceneAreaWeatherNotify) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.String> weatherValueMap_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.String>
    internalGetWeatherValueMap() {
      if (weatherValueMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            WeatherValueMapDefaultEntryHolder.defaultEntry);
      }
      return weatherValueMap_;
    }
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.String>
    internalGetMutableWeatherValueMap() {
      onChanged();;
      if (weatherValueMap_ == null) {
        weatherValueMap_ = com.google.protobuf.MapField.newMapField(
            WeatherValueMapDefaultEntryHolder.defaultEntry);
      }
      if (!weatherValueMap_.isMutable()) {
        weatherValueMap_ = weatherValueMap_.copy();
      }
      return weatherValueMap_;
    }

    public int getWeatherValueMapCount() {
      return internalGetWeatherValueMap().getMap().size();
    }
    /**
     * <code>map&lt;uint32, string&gt; weather_value_map = 6;</code>
     */

    @java.lang.Override
    public boolean containsWeatherValueMap(
        int key) {
      
      return internalGetWeatherValueMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getWeatherValueMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.String> getWeatherValueMap() {
      return getWeatherValueMapMap();
    }
    /**
     * <code>map&lt;uint32, string&gt; weather_value_map = 6;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.String> getWeatherValueMapMap() {
      return internalGetWeatherValueMap().getMap();
    }
    /**
     * <code>map&lt;uint32, string&gt; weather_value_map = 6;</code>
     */
    @java.lang.Override

    public java.lang.String getWeatherValueMapOrDefault(
        int key,
        java.lang.String defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.String> map =
          internalGetWeatherValueMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, string&gt; weather_value_map = 6;</code>
     */
    @java.lang.Override

    public java.lang.String getWeatherValueMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.String> map =
          internalGetWeatherValueMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearWeatherValueMap() {
      internalGetMutableWeatherValueMap().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;uint32, string&gt; weather_value_map = 6;</code>
     */

    public Builder removeWeatherValueMap(
        int key) {
      
      internalGetMutableWeatherValueMap().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.String>
    getMutableWeatherValueMap() {
      return internalGetMutableWeatherValueMap().getMutableMap();
    }
    /**
     * <code>map&lt;uint32, string&gt; weather_value_map = 6;</code>
     */
    public Builder putWeatherValueMap(
        int key,
        java.lang.String value) {
      
      if (value == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableWeatherValueMap().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;uint32, string&gt; weather_value_map = 6;</code>
     */

    public Builder putAllWeatherValueMap(
        java.util.Map<java.lang.Integer, java.lang.String> values) {
      internalGetMutableWeatherValueMap().getMutableMap()
          .putAll(values);
      return this;
    }

    private float transDuration_ ;
    /**
     * <code>float trans_duration = 15;</code>
     * @return The transDuration.
     */
    @java.lang.Override
    public float getTransDuration() {
      return transDuration_;
    }
    /**
     * <code>float trans_duration = 15;</code>
     * @param value The transDuration to set.
     * @return This builder for chaining.
     */
    public Builder setTransDuration(float value) {
      
      transDuration_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float trans_duration = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearTransDuration() {
      
      transDuration_ = 0F;
      onChanged();
      return this;
    }

    private int weatherGadgetId_ ;
    /**
     * <code>uint32 weather_gadget_id = 10;</code>
     * @return The weatherGadgetId.
     */
    @java.lang.Override
    public int getWeatherGadgetId() {
      return weatherGadgetId_;
    }
    /**
     * <code>uint32 weather_gadget_id = 10;</code>
     * @param value The weatherGadgetId to set.
     * @return This builder for chaining.
     */
    public Builder setWeatherGadgetId(int value) {
      
      weatherGadgetId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 weather_gadget_id = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearWeatherGadgetId() {
      
      weatherGadgetId_ = 0;
      onChanged();
      return this;
    }

    private int climateType_ ;
    /**
     * <code>uint32 climate_type = 13;</code>
     * @return The climateType.
     */
    @java.lang.Override
    public int getClimateType() {
      return climateType_;
    }
    /**
     * <code>uint32 climate_type = 13;</code>
     * @param value The climateType to set.
     * @return This builder for chaining.
     */
    public Builder setClimateType(int value) {
      
      climateType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 climate_type = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearClimateType() {
      
      climateType_ = 0;
      onChanged();
      return this;
    }

    private int weatherAreaId_ ;
    /**
     * <code>uint32 weather_area_id = 11;</code>
     * @return The weatherAreaId.
     */
    @java.lang.Override
    public int getWeatherAreaId() {
      return weatherAreaId_;
    }
    /**
     * <code>uint32 weather_area_id = 11;</code>
     * @param value The weatherAreaId to set.
     * @return This builder for chaining.
     */
    public Builder setWeatherAreaId(int value) {
      
      weatherAreaId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 weather_area_id = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearWeatherAreaId() {
      
      weatherAreaId_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:SceneAreaWeatherNotify)
  }

  // @@protoc_insertion_point(class_scope:SceneAreaWeatherNotify)
  private static final io.grasscutter.net.proto.scene.SceneAreaWeatherNotify DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.grasscutter.net.proto.scene.SceneAreaWeatherNotify();
  }

  public static io.grasscutter.net.proto.scene.SceneAreaWeatherNotify getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SceneAreaWeatherNotify>
      PARSER = new com.google.protobuf.AbstractParser<SceneAreaWeatherNotify>() {
    @java.lang.Override
    public SceneAreaWeatherNotify parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SceneAreaWeatherNotify(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SceneAreaWeatherNotify> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SceneAreaWeatherNotify> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.grasscutter.net.proto.scene.SceneAreaWeatherNotify getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

