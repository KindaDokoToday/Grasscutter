// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: property.proto

package io.grasscutter.net.proto.property;

/**
 * Protobuf enum {@code ChangeHpReason}
 */
public enum ChangeHpReason
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>ChangeHpReason_CHANGE_HP_NONE = 0;</code>
   */
  ChangeHpReason_CHANGE_HP_NONE(0),
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_AVATAR = 1;</code>
   */
  ChangeHpReason_CHANGE_HP_SUB_AVATAR(1),
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_MONSTER = 2;</code>
   */
  ChangeHpReason_CHANGE_HP_SUB_MONSTER(2),
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_GEAR = 3;</code>
   */
  ChangeHpReason_CHANGE_HP_SUB_GEAR(3),
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_ENVIR = 4;</code>
   */
  ChangeHpReason_CHANGE_HP_SUB_ENVIR(4),
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_FALL = 5;</code>
   */
  ChangeHpReason_CHANGE_HP_SUB_FALL(5),
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_DRAWN = 6;</code>
   */
  ChangeHpReason_CHANGE_HP_SUB_DRAWN(6),
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_ABYSS = 7;</code>
   */
  ChangeHpReason_CHANGE_HP_SUB_ABYSS(7),
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_ABILITY = 8;</code>
   */
  ChangeHpReason_CHANGE_HP_SUB_ABILITY(8),
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_SUMMON = 9;</code>
   */
  ChangeHpReason_CHANGE_HP_SUB_SUMMON(9),
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_SCRIPT = 10;</code>
   */
  ChangeHpReason_CHANGE_HP_SUB_SCRIPT(10),
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_GM = 11;</code>
   */
  ChangeHpReason_CHANGE_HP_SUB_GM(11),
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_KILL_SELF = 12;</code>
   */
  ChangeHpReason_CHANGE_HP_SUB_KILL_SELF(12),
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_CLIMATE_COLD = 13;</code>
   */
  ChangeHpReason_CHANGE_HP_SUB_CLIMATE_COLD(13),
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_STORM_LIGHTNING = 14;</code>
   */
  ChangeHpReason_CHANGE_HP_SUB_STORM_LIGHTNING(14),
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_KILL_SERVER_GADGET = 15;</code>
   */
  ChangeHpReason_CHANGE_HP_SUB_KILL_SERVER_GADGET(15),
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_REPLACE = 16;</code>
   */
  ChangeHpReason_CHANGE_HP_SUB_REPLACE(16),
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_PLAYER_LEAVE = 17;</code>
   */
  ChangeHpReason_CHANGE_HP_SUB_PLAYER_LEAVE(17),
  /**
   * <code>ChangeHpReason_CHANGE_HP_ATTACK_BY_ENERGY = 18;</code>
   */
  ChangeHpReason_CHANGE_HP_ATTACK_BY_ENERGY(18),
  /**
   * <code>ChangeHpReason_CHANGE_HP_ATTACK_BY_RECYCLE = 19;</code>
   */
  ChangeHpReason_CHANGE_HP_ATTACK_BY_RECYCLE(19),
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_PLAYER_BACK = 20;</code>
   */
  ChangeHpReason_CHANGE_HP_SUB_PLAYER_BACK(20),
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_UGC = 21;</code>
   */
  ChangeHpReason_CHANGE_HP_SUB_UGC(21),
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_DIRTY_WATER_EROSION = 22;</code>
   */
  ChangeHpReason_CHANGE_HP_SUB_DIRTY_WATER_EROSION(22),
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_DESTROY_SELF = 23;</code>
   */
  ChangeHpReason_CHANGE_HP_SUB_DESTROY_SELF(23),
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_LIQUID_PHLOGISTON = 24;</code>
   */
  ChangeHpReason_CHANGE_HP_SUB_LIQUID_PHLOGISTON(24),
  /**
   * <code>ChangeHpReason_CHANGE_HP_BY_LUA = 51;</code>
   */
  ChangeHpReason_CHANGE_HP_BY_LUA(51),
  /**
   * <code>ChangeHpReason_CHANGE_HP_ADD_ABILITY = 101;</code>
   */
  ChangeHpReason_CHANGE_HP_ADD_ABILITY(101),
  /**
   * <code>ChangeHpReason_CHANGE_HP_ADD_ITEM = 102;</code>
   */
  ChangeHpReason_CHANGE_HP_ADD_ITEM(102),
  /**
   * <code>ChangeHpReason_CHANGE_HP_ADD_REVIVE = 103;</code>
   */
  ChangeHpReason_CHANGE_HP_ADD_REVIVE(103),
  /**
   * <code>ChangeHpReason_CHANGE_HP_ADD_UPGRADE = 104;</code>
   */
  ChangeHpReason_CHANGE_HP_ADD_UPGRADE(104),
  /**
   * <code>ChangeHpReason_CHANGE_HP_ADD_STATUE = 105;</code>
   */
  ChangeHpReason_CHANGE_HP_ADD_STATUE(105),
  /**
   * <code>ChangeHpReason_CHANGE_HP_ADD_BACKGROUND = 106;</code>
   */
  ChangeHpReason_CHANGE_HP_ADD_BACKGROUND(106),
  /**
   * <code>ChangeHpReason_CHANGE_HP_ADD_GM = 107;</code>
   */
  ChangeHpReason_CHANGE_HP_ADD_GM(107),
  /**
   * <code>ChangeHpReason_CHANGE_HP_ADD_TRIAL_AVATAR_ACTIVITY = 108;</code>
   */
  ChangeHpReason_CHANGE_HP_ADD_TRIAL_AVATAR_ACTIVITY(108),
  /**
   * <code>ChangeHpReason_CHANGE_HP_ADD_ROUGUELIKE_SPRING = 109;</code>
   */
  ChangeHpReason_CHANGE_HP_ADD_ROUGUELIKE_SPRING(109),
  /**
   * <code>ChangeHpReason_CHANGE_HP_ADD_EFFIGY_CHALLENGE_V5 = 110;</code>
   */
  ChangeHpReason_CHANGE_HP_ADD_EFFIGY_CHALLENGE_V5(110),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>ChangeHpReason_CHANGE_HP_NONE = 0;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_NONE_VALUE = 0;
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_AVATAR = 1;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_SUB_AVATAR_VALUE = 1;
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_MONSTER = 2;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_SUB_MONSTER_VALUE = 2;
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_GEAR = 3;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_SUB_GEAR_VALUE = 3;
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_ENVIR = 4;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_SUB_ENVIR_VALUE = 4;
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_FALL = 5;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_SUB_FALL_VALUE = 5;
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_DRAWN = 6;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_SUB_DRAWN_VALUE = 6;
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_ABYSS = 7;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_SUB_ABYSS_VALUE = 7;
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_ABILITY = 8;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_SUB_ABILITY_VALUE = 8;
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_SUMMON = 9;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_SUB_SUMMON_VALUE = 9;
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_SCRIPT = 10;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_SUB_SCRIPT_VALUE = 10;
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_GM = 11;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_SUB_GM_VALUE = 11;
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_KILL_SELF = 12;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_SUB_KILL_SELF_VALUE = 12;
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_CLIMATE_COLD = 13;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_SUB_CLIMATE_COLD_VALUE = 13;
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_STORM_LIGHTNING = 14;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_SUB_STORM_LIGHTNING_VALUE = 14;
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_KILL_SERVER_GADGET = 15;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_SUB_KILL_SERVER_GADGET_VALUE = 15;
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_REPLACE = 16;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_SUB_REPLACE_VALUE = 16;
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_PLAYER_LEAVE = 17;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_SUB_PLAYER_LEAVE_VALUE = 17;
  /**
   * <code>ChangeHpReason_CHANGE_HP_ATTACK_BY_ENERGY = 18;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_ATTACK_BY_ENERGY_VALUE = 18;
  /**
   * <code>ChangeHpReason_CHANGE_HP_ATTACK_BY_RECYCLE = 19;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_ATTACK_BY_RECYCLE_VALUE = 19;
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_PLAYER_BACK = 20;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_SUB_PLAYER_BACK_VALUE = 20;
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_UGC = 21;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_SUB_UGC_VALUE = 21;
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_DIRTY_WATER_EROSION = 22;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_SUB_DIRTY_WATER_EROSION_VALUE = 22;
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_DESTROY_SELF = 23;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_SUB_DESTROY_SELF_VALUE = 23;
  /**
   * <code>ChangeHpReason_CHANGE_HP_SUB_LIQUID_PHLOGISTON = 24;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_SUB_LIQUID_PHLOGISTON_VALUE = 24;
  /**
   * <code>ChangeHpReason_CHANGE_HP_BY_LUA = 51;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_BY_LUA_VALUE = 51;
  /**
   * <code>ChangeHpReason_CHANGE_HP_ADD_ABILITY = 101;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_ADD_ABILITY_VALUE = 101;
  /**
   * <code>ChangeHpReason_CHANGE_HP_ADD_ITEM = 102;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_ADD_ITEM_VALUE = 102;
  /**
   * <code>ChangeHpReason_CHANGE_HP_ADD_REVIVE = 103;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_ADD_REVIVE_VALUE = 103;
  /**
   * <code>ChangeHpReason_CHANGE_HP_ADD_UPGRADE = 104;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_ADD_UPGRADE_VALUE = 104;
  /**
   * <code>ChangeHpReason_CHANGE_HP_ADD_STATUE = 105;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_ADD_STATUE_VALUE = 105;
  /**
   * <code>ChangeHpReason_CHANGE_HP_ADD_BACKGROUND = 106;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_ADD_BACKGROUND_VALUE = 106;
  /**
   * <code>ChangeHpReason_CHANGE_HP_ADD_GM = 107;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_ADD_GM_VALUE = 107;
  /**
   * <code>ChangeHpReason_CHANGE_HP_ADD_TRIAL_AVATAR_ACTIVITY = 108;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_ADD_TRIAL_AVATAR_ACTIVITY_VALUE = 108;
  /**
   * <code>ChangeHpReason_CHANGE_HP_ADD_ROUGUELIKE_SPRING = 109;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_ADD_ROUGUELIKE_SPRING_VALUE = 109;
  /**
   * <code>ChangeHpReason_CHANGE_HP_ADD_EFFIGY_CHALLENGE_V5 = 110;</code>
   */
  public static final int ChangeHpReason_CHANGE_HP_ADD_EFFIGY_CHALLENGE_V5_VALUE = 110;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ChangeHpReason valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static ChangeHpReason forNumber(int value) {
    switch (value) {
      case 0: return ChangeHpReason_CHANGE_HP_NONE;
      case 1: return ChangeHpReason_CHANGE_HP_SUB_AVATAR;
      case 2: return ChangeHpReason_CHANGE_HP_SUB_MONSTER;
      case 3: return ChangeHpReason_CHANGE_HP_SUB_GEAR;
      case 4: return ChangeHpReason_CHANGE_HP_SUB_ENVIR;
      case 5: return ChangeHpReason_CHANGE_HP_SUB_FALL;
      case 6: return ChangeHpReason_CHANGE_HP_SUB_DRAWN;
      case 7: return ChangeHpReason_CHANGE_HP_SUB_ABYSS;
      case 8: return ChangeHpReason_CHANGE_HP_SUB_ABILITY;
      case 9: return ChangeHpReason_CHANGE_HP_SUB_SUMMON;
      case 10: return ChangeHpReason_CHANGE_HP_SUB_SCRIPT;
      case 11: return ChangeHpReason_CHANGE_HP_SUB_GM;
      case 12: return ChangeHpReason_CHANGE_HP_SUB_KILL_SELF;
      case 13: return ChangeHpReason_CHANGE_HP_SUB_CLIMATE_COLD;
      case 14: return ChangeHpReason_CHANGE_HP_SUB_STORM_LIGHTNING;
      case 15: return ChangeHpReason_CHANGE_HP_SUB_KILL_SERVER_GADGET;
      case 16: return ChangeHpReason_CHANGE_HP_SUB_REPLACE;
      case 17: return ChangeHpReason_CHANGE_HP_SUB_PLAYER_LEAVE;
      case 18: return ChangeHpReason_CHANGE_HP_ATTACK_BY_ENERGY;
      case 19: return ChangeHpReason_CHANGE_HP_ATTACK_BY_RECYCLE;
      case 20: return ChangeHpReason_CHANGE_HP_SUB_PLAYER_BACK;
      case 21: return ChangeHpReason_CHANGE_HP_SUB_UGC;
      case 22: return ChangeHpReason_CHANGE_HP_SUB_DIRTY_WATER_EROSION;
      case 23: return ChangeHpReason_CHANGE_HP_SUB_DESTROY_SELF;
      case 24: return ChangeHpReason_CHANGE_HP_SUB_LIQUID_PHLOGISTON;
      case 51: return ChangeHpReason_CHANGE_HP_BY_LUA;
      case 101: return ChangeHpReason_CHANGE_HP_ADD_ABILITY;
      case 102: return ChangeHpReason_CHANGE_HP_ADD_ITEM;
      case 103: return ChangeHpReason_CHANGE_HP_ADD_REVIVE;
      case 104: return ChangeHpReason_CHANGE_HP_ADD_UPGRADE;
      case 105: return ChangeHpReason_CHANGE_HP_ADD_STATUE;
      case 106: return ChangeHpReason_CHANGE_HP_ADD_BACKGROUND;
      case 107: return ChangeHpReason_CHANGE_HP_ADD_GM;
      case 108: return ChangeHpReason_CHANGE_HP_ADD_TRIAL_AVATAR_ACTIVITY;
      case 109: return ChangeHpReason_CHANGE_HP_ADD_ROUGUELIKE_SPRING;
      case 110: return ChangeHpReason_CHANGE_HP_ADD_EFFIGY_CHALLENGE_V5;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ChangeHpReason>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ChangeHpReason> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ChangeHpReason>() {
          public ChangeHpReason findValueByNumber(int number) {
            return ChangeHpReason.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return io.grasscutter.net.proto.property.Property.getDescriptor().getEnumTypes().get(3);
  }

  private static final ChangeHpReason[] VALUES = values();

  public static ChangeHpReason valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ChangeHpReason(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:ChangeHpReason)
}

