// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fight.proto

package io.grasscutter.net.proto.fight;

/**
 * Protobuf enum {@code CombatTypeArgument}
 */
public enum CombatTypeArgument
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>CombatTypeArgument_COMBAT_NONE = 0;</code>
   */
  CombatTypeArgument_COMBAT_NONE(0),
  /**
   * <code>CombatTypeArgument_COMBAT_EVT_BEING_HIT = 1;</code>
   */
  CombatTypeArgument_COMBAT_EVT_BEING_HIT(1),
  /**
   * <code>CombatTypeArgument_COMBAT_ANIMATOR_STATE_CHANGED = 2;</code>
   */
  CombatTypeArgument_COMBAT_ANIMATOR_STATE_CHANGED(2),
  /**
   * <code>CombatTypeArgument_COMBAT_FACE_TO_DIR = 3;</code>
   */
  CombatTypeArgument_COMBAT_FACE_TO_DIR(3),
  /**
   * <code>CombatTypeArgument_COMBAT_SET_ATTACK_TARGET = 4;</code>
   */
  CombatTypeArgument_COMBAT_SET_ATTACK_TARGET(4),
  /**
   * <code>CombatTypeArgument_COMBAT_RUSH_MOVE = 5;</code>
   */
  CombatTypeArgument_COMBAT_RUSH_MOVE(5),
  /**
   * <code>CombatTypeArgument_COMBAT_ANIMATOR_PARAMETER_CHANGED = 6;</code>
   */
  CombatTypeArgument_COMBAT_ANIMATOR_PARAMETER_CHANGED(6),
  /**
   * <code>CombatTypeArgument_ENTITY_MOVE = 7;</code>
   */
  CombatTypeArgument_ENTITY_MOVE(7),
  /**
   * <code>CombatTypeArgument_SYNC_ENTITY_POSITION = 8;</code>
   */
  CombatTypeArgument_SYNC_ENTITY_POSITION(8),
  /**
   * <code>CombatTypeArgument_COMBAT_STEER_MOTION_INFO = 9;</code>
   */
  CombatTypeArgument_COMBAT_STEER_MOTION_INFO(9),
  /**
   * <code>CombatTypeArgument_COMBAT_FORCE_SET_POS_INFO = 10;</code>
   */
  CombatTypeArgument_COMBAT_FORCE_SET_POS_INFO(10),
  /**
   * <code>CombatTypeArgument_COMBAT_COMPENSATE_POS_DIFF = 11;</code>
   */
  CombatTypeArgument_COMBAT_COMPENSATE_POS_DIFF(11),
  /**
   * <code>CombatTypeArgument_COMBAT_MONSTER_DO_BLINK = 12;</code>
   */
  CombatTypeArgument_COMBAT_MONSTER_DO_BLINK(12),
  /**
   * <code>CombatTypeArgument_COMBAT_FIXED_RUSH_MOVE = 13;</code>
   */
  CombatTypeArgument_COMBAT_FIXED_RUSH_MOVE(13),
  /**
   * <code>CombatTypeArgument_COMBAT_SYNC_TRANSFORM = 14;</code>
   */
  CombatTypeArgument_COMBAT_SYNC_TRANSFORM(14),
  /**
   * <code>CombatTypeArgument_COMBAT_LIGHT_CORE_MOVE = 15;</code>
   */
  CombatTypeArgument_COMBAT_LIGHT_CORE_MOVE(15),
  /**
   * <code>CombatTypeArgument_COMBAT_BEING_HEALED_NTF = 16;</code>
   */
  CombatTypeArgument_COMBAT_BEING_HEALED_NTF(16),
  /**
   * <code>CombatTypeArgument_COMBAT_SKILL_ANCHOR_POSITION_NTF = 17;</code>
   */
  CombatTypeArgument_COMBAT_SKILL_ANCHOR_POSITION_NTF(17),
  /**
   * <code>CombatTypeArgument_COMBAT_GRAPPLING_HOOK_MOVE = 18;</code>
   */
  CombatTypeArgument_COMBAT_GRAPPLING_HOOK_MOVE(18),
  /**
   * <code>CombatTypeArgument_COMBAT_SPECIAL_MOTION_INFO = 19;</code>
   */
  CombatTypeArgument_COMBAT_SPECIAL_MOTION_INFO(19),
  /**
   * <code>CombatTypeArgument_COMBAT_FIXED_AVATAR_FLASH_MOVE = 20;</code>
   */
  CombatTypeArgument_COMBAT_FIXED_AVATAR_FLASH_MOVE(20),
  /**
   * <code>CombatTypeArgument_COMBAT_MULTI_OVERRIDE_ANIM = 21;</code>
   */
  CombatTypeArgument_COMBAT_MULTI_OVERRIDE_ANIM(21),
  /**
   * <code>CombatTypeArgument_COMBAT_DEBUG_SYNC_MOTION = 22;</code>
   */
  CombatTypeArgument_COMBAT_DEBUG_SYNC_MOTION(22),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>CombatTypeArgument_COMBAT_NONE = 0;</code>
   */
  public static final int CombatTypeArgument_COMBAT_NONE_VALUE = 0;
  /**
   * <code>CombatTypeArgument_COMBAT_EVT_BEING_HIT = 1;</code>
   */
  public static final int CombatTypeArgument_COMBAT_EVT_BEING_HIT_VALUE = 1;
  /**
   * <code>CombatTypeArgument_COMBAT_ANIMATOR_STATE_CHANGED = 2;</code>
   */
  public static final int CombatTypeArgument_COMBAT_ANIMATOR_STATE_CHANGED_VALUE = 2;
  /**
   * <code>CombatTypeArgument_COMBAT_FACE_TO_DIR = 3;</code>
   */
  public static final int CombatTypeArgument_COMBAT_FACE_TO_DIR_VALUE = 3;
  /**
   * <code>CombatTypeArgument_COMBAT_SET_ATTACK_TARGET = 4;</code>
   */
  public static final int CombatTypeArgument_COMBAT_SET_ATTACK_TARGET_VALUE = 4;
  /**
   * <code>CombatTypeArgument_COMBAT_RUSH_MOVE = 5;</code>
   */
  public static final int CombatTypeArgument_COMBAT_RUSH_MOVE_VALUE = 5;
  /**
   * <code>CombatTypeArgument_COMBAT_ANIMATOR_PARAMETER_CHANGED = 6;</code>
   */
  public static final int CombatTypeArgument_COMBAT_ANIMATOR_PARAMETER_CHANGED_VALUE = 6;
  /**
   * <code>CombatTypeArgument_ENTITY_MOVE = 7;</code>
   */
  public static final int CombatTypeArgument_ENTITY_MOVE_VALUE = 7;
  /**
   * <code>CombatTypeArgument_SYNC_ENTITY_POSITION = 8;</code>
   */
  public static final int CombatTypeArgument_SYNC_ENTITY_POSITION_VALUE = 8;
  /**
   * <code>CombatTypeArgument_COMBAT_STEER_MOTION_INFO = 9;</code>
   */
  public static final int CombatTypeArgument_COMBAT_STEER_MOTION_INFO_VALUE = 9;
  /**
   * <code>CombatTypeArgument_COMBAT_FORCE_SET_POS_INFO = 10;</code>
   */
  public static final int CombatTypeArgument_COMBAT_FORCE_SET_POS_INFO_VALUE = 10;
  /**
   * <code>CombatTypeArgument_COMBAT_COMPENSATE_POS_DIFF = 11;</code>
   */
  public static final int CombatTypeArgument_COMBAT_COMPENSATE_POS_DIFF_VALUE = 11;
  /**
   * <code>CombatTypeArgument_COMBAT_MONSTER_DO_BLINK = 12;</code>
   */
  public static final int CombatTypeArgument_COMBAT_MONSTER_DO_BLINK_VALUE = 12;
  /**
   * <code>CombatTypeArgument_COMBAT_FIXED_RUSH_MOVE = 13;</code>
   */
  public static final int CombatTypeArgument_COMBAT_FIXED_RUSH_MOVE_VALUE = 13;
  /**
   * <code>CombatTypeArgument_COMBAT_SYNC_TRANSFORM = 14;</code>
   */
  public static final int CombatTypeArgument_COMBAT_SYNC_TRANSFORM_VALUE = 14;
  /**
   * <code>CombatTypeArgument_COMBAT_LIGHT_CORE_MOVE = 15;</code>
   */
  public static final int CombatTypeArgument_COMBAT_LIGHT_CORE_MOVE_VALUE = 15;
  /**
   * <code>CombatTypeArgument_COMBAT_BEING_HEALED_NTF = 16;</code>
   */
  public static final int CombatTypeArgument_COMBAT_BEING_HEALED_NTF_VALUE = 16;
  /**
   * <code>CombatTypeArgument_COMBAT_SKILL_ANCHOR_POSITION_NTF = 17;</code>
   */
  public static final int CombatTypeArgument_COMBAT_SKILL_ANCHOR_POSITION_NTF_VALUE = 17;
  /**
   * <code>CombatTypeArgument_COMBAT_GRAPPLING_HOOK_MOVE = 18;</code>
   */
  public static final int CombatTypeArgument_COMBAT_GRAPPLING_HOOK_MOVE_VALUE = 18;
  /**
   * <code>CombatTypeArgument_COMBAT_SPECIAL_MOTION_INFO = 19;</code>
   */
  public static final int CombatTypeArgument_COMBAT_SPECIAL_MOTION_INFO_VALUE = 19;
  /**
   * <code>CombatTypeArgument_COMBAT_FIXED_AVATAR_FLASH_MOVE = 20;</code>
   */
  public static final int CombatTypeArgument_COMBAT_FIXED_AVATAR_FLASH_MOVE_VALUE = 20;
  /**
   * <code>CombatTypeArgument_COMBAT_MULTI_OVERRIDE_ANIM = 21;</code>
   */
  public static final int CombatTypeArgument_COMBAT_MULTI_OVERRIDE_ANIM_VALUE = 21;
  /**
   * <code>CombatTypeArgument_COMBAT_DEBUG_SYNC_MOTION = 22;</code>
   */
  public static final int CombatTypeArgument_COMBAT_DEBUG_SYNC_MOTION_VALUE = 22;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static CombatTypeArgument valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static CombatTypeArgument forNumber(int value) {
    switch (value) {
      case 0: return CombatTypeArgument_COMBAT_NONE;
      case 1: return CombatTypeArgument_COMBAT_EVT_BEING_HIT;
      case 2: return CombatTypeArgument_COMBAT_ANIMATOR_STATE_CHANGED;
      case 3: return CombatTypeArgument_COMBAT_FACE_TO_DIR;
      case 4: return CombatTypeArgument_COMBAT_SET_ATTACK_TARGET;
      case 5: return CombatTypeArgument_COMBAT_RUSH_MOVE;
      case 6: return CombatTypeArgument_COMBAT_ANIMATOR_PARAMETER_CHANGED;
      case 7: return CombatTypeArgument_ENTITY_MOVE;
      case 8: return CombatTypeArgument_SYNC_ENTITY_POSITION;
      case 9: return CombatTypeArgument_COMBAT_STEER_MOTION_INFO;
      case 10: return CombatTypeArgument_COMBAT_FORCE_SET_POS_INFO;
      case 11: return CombatTypeArgument_COMBAT_COMPENSATE_POS_DIFF;
      case 12: return CombatTypeArgument_COMBAT_MONSTER_DO_BLINK;
      case 13: return CombatTypeArgument_COMBAT_FIXED_RUSH_MOVE;
      case 14: return CombatTypeArgument_COMBAT_SYNC_TRANSFORM;
      case 15: return CombatTypeArgument_COMBAT_LIGHT_CORE_MOVE;
      case 16: return CombatTypeArgument_COMBAT_BEING_HEALED_NTF;
      case 17: return CombatTypeArgument_COMBAT_SKILL_ANCHOR_POSITION_NTF;
      case 18: return CombatTypeArgument_COMBAT_GRAPPLING_HOOK_MOVE;
      case 19: return CombatTypeArgument_COMBAT_SPECIAL_MOTION_INFO;
      case 20: return CombatTypeArgument_COMBAT_FIXED_AVATAR_FLASH_MOVE;
      case 21: return CombatTypeArgument_COMBAT_MULTI_OVERRIDE_ANIM;
      case 22: return CombatTypeArgument_COMBAT_DEBUG_SYNC_MOTION;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<CombatTypeArgument>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      CombatTypeArgument> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<CombatTypeArgument>() {
          public CombatTypeArgument findValueByNumber(int number) {
            return CombatTypeArgument.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return io.grasscutter.net.proto.fight.Fight.getDescriptor().getEnumTypes().get(2);
  }

  private static final CombatTypeArgument[] VALUES = values();

  public static CombatTypeArgument valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private CombatTypeArgument(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:CombatTypeArgument)
}

