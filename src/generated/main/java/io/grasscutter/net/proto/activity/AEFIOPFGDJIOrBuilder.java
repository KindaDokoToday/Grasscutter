// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: activity.proto

package io.grasscutter.net.proto.activity;

public interface AEFIOPFGDJIOrBuilder extends
    // @@protoc_insertion_point(interface_extends:AEFIOPFGDJI)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>repeated uint32 DDDBBIPMMJA = 15;</code>
   * @return A list containing the dDDBBIPMMJA.
   */
  java.util.List<java.lang.Integer> getDDDBBIPMMJAList();
  /**
   * <code>repeated uint32 DDDBBIPMMJA = 15;</code>
   * @return The count of dDDBBIPMMJA.
   */
  int getDDDBBIPMMJACount();
  /**
   * <code>repeated uint32 DDDBBIPMMJA = 15;</code>
   * @param index The index of the element to return.
   * @return The dDDBBIPMMJA at the given index.
   */
  int getDDDBBIPMMJA(int index);

  /**
   * <code>repeated uint32 IGHMLOENDHP = 2;</code>
   * @return A list containing the iGHMLOENDHP.
   */
  java.util.List<java.lang.Integer> getIGHMLOENDHPList();
  /**
   * <code>repeated uint32 IGHMLOENDHP = 2;</code>
   * @return The count of iGHMLOENDHP.
   */
  int getIGHMLOENDHPCount();
  /**
   * <code>repeated uint32 IGHMLOENDHP = 2;</code>
   * @param index The index of the element to return.
   * @return The iGHMLOENDHP at the given index.
   */
  int getIGHMLOENDHP(int index);

  /**
   * <code>repeated .NEIFCKNFNAK level_list = 6;</code>
   */
  java.util.List<io.grasscutter.net.proto.activity.NEIFCKNFNAK> 
      getLevelListList();
  /**
   * <code>repeated .NEIFCKNFNAK level_list = 6;</code>
   */
  io.grasscutter.net.proto.activity.NEIFCKNFNAK getLevelList(int index);
  /**
   * <code>repeated .NEIFCKNFNAK level_list = 6;</code>
   */
  int getLevelListCount();
  /**
   * <code>repeated .NEIFCKNFNAK level_list = 6;</code>
   */
  java.util.List<? extends io.grasscutter.net.proto.activity.NEIFCKNFNAKOrBuilder> 
      getLevelListOrBuilderList();
  /**
   * <code>repeated .NEIFCKNFNAK level_list = 6;</code>
   */
  io.grasscutter.net.proto.activity.NEIFCKNFNAKOrBuilder getLevelListOrBuilder(
      int index);

  /**
   * <code>bool is_open = 13;</code>
   * @return The isOpen.
   */
  boolean getIsOpen();

  /**
   * <code>uint32 stage_id = 5;</code>
   * @return The stageId.
   */
  int getStageId();
}
