// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: define.proto

package io.grasscutter.net.proto.define;

public interface QuestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:Quest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>repeated uint32 finish_progress_list = 10;</code>
   * @return A list containing the finishProgressList.
   */
  java.util.List<java.lang.Integer> getFinishProgressListList();
  /**
   * <code>repeated uint32 finish_progress_list = 10;</code>
   * @return The count of finishProgressList.
   */
  int getFinishProgressListCount();
  /**
   * <code>repeated uint32 finish_progress_list = 10;</code>
   * @param index The index of the element to return.
   * @return The finishProgressList at the given index.
   */
  int getFinishProgressList(int index);

  /**
   * <code>repeated uint32 FKILEOBOBPK = 12;</code>
   * @return A list containing the fKILEOBOBPK.
   */
  java.util.List<java.lang.Integer> getFKILEOBOBPKList();
  /**
   * <code>repeated uint32 FKILEOBOBPK = 12;</code>
   * @return The count of fKILEOBOBPK.
   */
  int getFKILEOBOBPKCount();
  /**
   * <code>repeated uint32 FKILEOBOBPK = 12;</code>
   * @param index The index of the element to return.
   * @return The fKILEOBOBPK at the given index.
   */
  int getFKILEOBOBPK(int index);

  /**
   * <code>.ILLMMCDPFAM NCKECKMMKDK = 13;</code>
   * @return Whether the nCKECKMMKDK field is set.
   */
  boolean hasNCKECKMMKDK();
  /**
   * <code>.ILLMMCDPFAM NCKECKMMKDK = 13;</code>
   * @return The nCKECKMMKDK.
   */
  io.grasscutter.net.proto.define.ILLMMCDPFAM getNCKECKMMKDK();
  /**
   * <code>.ILLMMCDPFAM NCKECKMMKDK = 13;</code>
   */
  io.grasscutter.net.proto.define.ILLMMCDPFAMOrBuilder getNCKECKMMKDKOrBuilder();

  /**
   * <code>repeated uint32 fail_progress_list = 11;</code>
   * @return A list containing the failProgressList.
   */
  java.util.List<java.lang.Integer> getFailProgressListList();
  /**
   * <code>repeated uint32 fail_progress_list = 11;</code>
   * @return The count of failProgressList.
   */
  int getFailProgressListCount();
  /**
   * <code>repeated uint32 fail_progress_list = 11;</code>
   * @param index The index of the element to return.
   * @return The failProgressList at the given index.
   */
  int getFailProgressList(int index);

  /**
   * <code>uint32 quest_id = 1;</code>
   * @return The questId.
   */
  int getQuestId();

  /**
   * <code>bool is_random = 5;</code>
   * @return The isRandom.
   */
  boolean getIsRandom();

  /**
   * <code>uint32 start_time = 4;</code>
   * @return The startTime.
   */
  int getStartTime();

  /**
   * <code>uint32 accept_time = 9;</code>
   * @return The acceptTime.
   */
  int getAcceptTime();

  /**
   * <code>uint32 start_game_time = 8;</code>
   * @return The startGameTime.
   */
  int getStartGameTime();

  /**
   * <code>uint32 state = 2;</code>
   * @return The state.
   */
  int getState();

  /**
   * <code>uint32 parent_quest_id = 6;</code>
   * @return The parentQuestId.
   */
  int getParentQuestId();

  /**
   * <code>uint32 quest_config_id = 7;</code>
   * @return The questConfigId.
   */
  int getQuestConfigId();
}
