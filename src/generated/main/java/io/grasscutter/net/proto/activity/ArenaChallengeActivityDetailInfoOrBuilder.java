// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: activity.proto

package io.grasscutter.net.proto.activity;

public interface ArenaChallengeActivityDetailInfoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:ArenaChallengeActivityDetailInfo)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>map&lt;uint32, uint32&gt; level_open_time_map = 15;</code>
   */
  int getLevelOpenTimeMapCount();
  /**
   * <code>map&lt;uint32, uint32&gt; level_open_time_map = 15;</code>
   */
  boolean containsLevelOpenTimeMap(
      int key);
  /**
   * Use {@link #getLevelOpenTimeMapMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, java.lang.Integer>
  getLevelOpenTimeMap();
  /**
   * <code>map&lt;uint32, uint32&gt; level_open_time_map = 15;</code>
   */
  java.util.Map<java.lang.Integer, java.lang.Integer>
  getLevelOpenTimeMapMap();
  /**
   * <code>map&lt;uint32, uint32&gt; level_open_time_map = 15;</code>
   */

  int getLevelOpenTimeMapOrDefault(
      int key,
      int defaultValue);
  /**
   * <code>map&lt;uint32, uint32&gt; level_open_time_map = 15;</code>
   */

  int getLevelOpenTimeMapOrThrow(
      int key);

  /**
   * <code>repeated .ArenaChallengeMonsterLevel level_list = 12;</code>
   */
  java.util.List<io.grasscutter.net.proto.activity.ArenaChallengeMonsterLevel> 
      getLevelListList();
  /**
   * <code>repeated .ArenaChallengeMonsterLevel level_list = 12;</code>
   */
  io.grasscutter.net.proto.activity.ArenaChallengeMonsterLevel getLevelList(int index);
  /**
   * <code>repeated .ArenaChallengeMonsterLevel level_list = 12;</code>
   */
  int getLevelListCount();
  /**
   * <code>repeated .ArenaChallengeMonsterLevel level_list = 12;</code>
   */
  java.util.List<? extends io.grasscutter.net.proto.activity.ArenaChallengeMonsterLevelOrBuilder> 
      getLevelListOrBuilderList();
  /**
   * <code>repeated .ArenaChallengeMonsterLevel level_list = 12;</code>
   */
  io.grasscutter.net.proto.activity.ArenaChallengeMonsterLevelOrBuilder getLevelListOrBuilder(
      int index);

  /**
   * <code>bool is_finish_any_level = 8;</code>
   * @return The isFinishAnyLevel.
   */
  boolean getIsFinishAnyLevel();

  /**
   * <code>uint32 world_level = 3;</code>
   * @return The worldLevel.
   */
  int getWorldLevel();
}
