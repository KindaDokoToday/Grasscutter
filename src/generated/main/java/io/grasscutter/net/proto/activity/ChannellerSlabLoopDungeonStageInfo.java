// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: activity.proto

package io.grasscutter.net.proto.activity;

/**
 * Protobuf type {@code ChannellerSlabLoopDungeonStageInfo}
 */
public final class ChannellerSlabLoopDungeonStageInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:ChannellerSlabLoopDungeonStageInfo)
    ChannellerSlabLoopDungeonStageInfoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ChannellerSlabLoopDungeonStageInfo.newBuilder() to construct.
  private ChannellerSlabLoopDungeonStageInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ChannellerSlabLoopDungeonStageInfo() {
    dungeonInfoList_ = java.util.Collections.emptyList();
    takenRewardIndexList_ = emptyIntList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ChannellerSlabLoopDungeonStageInfo();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ChannellerSlabLoopDungeonStageInfo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 16: {

            openTime_ = input.readUInt32();
            break;
          }
          case 58: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              dungeonInfoList_ = new java.util.ArrayList<io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfo>();
              mutable_bitField0_ |= 0x00000001;
            }
            dungeonInfoList_.add(
                input.readMessage(io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfo.parser(), extensionRegistry));
            break;
          }
          case 88: {

            lastDifficultyId_ = input.readUInt32();
            break;
          }
          case 104: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              takenRewardIndexList_ = newIntList();
              mutable_bitField0_ |= 0x00000002;
            }
            takenRewardIndexList_.addInt(input.readUInt32());
            break;
          }
          case 106: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
              takenRewardIndexList_ = newIntList();
              mutable_bitField0_ |= 0x00000002;
            }
            while (input.getBytesUntilLimit() > 0) {
              takenRewardIndexList_.addInt(input.readUInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 112: {

            isOpen_ = input.readBool();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        dungeonInfoList_ = java.util.Collections.unmodifiableList(dungeonInfoList_);
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        takenRewardIndexList_.makeImmutable(); // C
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.grasscutter.net.proto.activity.Activity.internal_static_ChannellerSlabLoopDungeonStageInfo_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.grasscutter.net.proto.activity.Activity.internal_static_ChannellerSlabLoopDungeonStageInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo.class, io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo.Builder.class);
  }

  public static final int DUNGEON_INFO_LIST_FIELD_NUMBER = 7;
  private java.util.List<io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfo> dungeonInfoList_;
  /**
   * <code>repeated .ChannellerSlabLoopDungeonInfo dungeon_info_list = 7;</code>
   */
  @java.lang.Override
  public java.util.List<io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfo> getDungeonInfoListList() {
    return dungeonInfoList_;
  }
  /**
   * <code>repeated .ChannellerSlabLoopDungeonInfo dungeon_info_list = 7;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfoOrBuilder> 
      getDungeonInfoListOrBuilderList() {
    return dungeonInfoList_;
  }
  /**
   * <code>repeated .ChannellerSlabLoopDungeonInfo dungeon_info_list = 7;</code>
   */
  @java.lang.Override
  public int getDungeonInfoListCount() {
    return dungeonInfoList_.size();
  }
  /**
   * <code>repeated .ChannellerSlabLoopDungeonInfo dungeon_info_list = 7;</code>
   */
  @java.lang.Override
  public io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfo getDungeonInfoList(int index) {
    return dungeonInfoList_.get(index);
  }
  /**
   * <code>repeated .ChannellerSlabLoopDungeonInfo dungeon_info_list = 7;</code>
   */
  @java.lang.Override
  public io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfoOrBuilder getDungeonInfoListOrBuilder(
      int index) {
    return dungeonInfoList_.get(index);
  }

  public static final int TAKEN_REWARD_INDEX_LIST_FIELD_NUMBER = 13;
  private com.google.protobuf.Internal.IntList takenRewardIndexList_;
  /**
   * <code>repeated uint32 taken_reward_index_list = 13;</code>
   * @return A list containing the takenRewardIndexList.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getTakenRewardIndexListList() {
    return takenRewardIndexList_;
  }
  /**
   * <code>repeated uint32 taken_reward_index_list = 13;</code>
   * @return The count of takenRewardIndexList.
   */
  public int getTakenRewardIndexListCount() {
    return takenRewardIndexList_.size();
  }
  /**
   * <code>repeated uint32 taken_reward_index_list = 13;</code>
   * @param index The index of the element to return.
   * @return The takenRewardIndexList at the given index.
   */
  public int getTakenRewardIndexList(int index) {
    return takenRewardIndexList_.getInt(index);
  }
  private int takenRewardIndexListMemoizedSerializedSize = -1;

  public static final int OPEN_TIME_FIELD_NUMBER = 2;
  private int openTime_;
  /**
   * <code>uint32 open_time = 2;</code>
   * @return The openTime.
   */
  @java.lang.Override
  public int getOpenTime() {
    return openTime_;
  }

  public static final int LAST_DIFFICULTY_ID_FIELD_NUMBER = 11;
  private int lastDifficultyId_;
  /**
   * <code>uint32 last_difficulty_id = 11;</code>
   * @return The lastDifficultyId.
   */
  @java.lang.Override
  public int getLastDifficultyId() {
    return lastDifficultyId_;
  }

  public static final int IS_OPEN_FIELD_NUMBER = 14;
  private boolean isOpen_;
  /**
   * <code>bool is_open = 14;</code>
   * @return The isOpen.
   */
  @java.lang.Override
  public boolean getIsOpen() {
    return isOpen_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (openTime_ != 0) {
      output.writeUInt32(2, openTime_);
    }
    for (int i = 0; i < dungeonInfoList_.size(); i++) {
      output.writeMessage(7, dungeonInfoList_.get(i));
    }
    if (lastDifficultyId_ != 0) {
      output.writeUInt32(11, lastDifficultyId_);
    }
    if (getTakenRewardIndexListList().size() > 0) {
      output.writeUInt32NoTag(106);
      output.writeUInt32NoTag(takenRewardIndexListMemoizedSerializedSize);
    }
    for (int i = 0; i < takenRewardIndexList_.size(); i++) {
      output.writeUInt32NoTag(takenRewardIndexList_.getInt(i));
    }
    if (isOpen_ != false) {
      output.writeBool(14, isOpen_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (openTime_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(2, openTime_);
    }
    for (int i = 0; i < dungeonInfoList_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, dungeonInfoList_.get(i));
    }
    if (lastDifficultyId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(11, lastDifficultyId_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < takenRewardIndexList_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(takenRewardIndexList_.getInt(i));
      }
      size += dataSize;
      if (!getTakenRewardIndexListList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      takenRewardIndexListMemoizedSerializedSize = dataSize;
    }
    if (isOpen_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(14, isOpen_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo)) {
      return super.equals(obj);
    }
    io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo other = (io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo) obj;

    if (!getDungeonInfoListList()
        .equals(other.getDungeonInfoListList())) return false;
    if (!getTakenRewardIndexListList()
        .equals(other.getTakenRewardIndexListList())) return false;
    if (getOpenTime()
        != other.getOpenTime()) return false;
    if (getLastDifficultyId()
        != other.getLastDifficultyId()) return false;
    if (getIsOpen()
        != other.getIsOpen()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getDungeonInfoListCount() > 0) {
      hash = (37 * hash) + DUNGEON_INFO_LIST_FIELD_NUMBER;
      hash = (53 * hash) + getDungeonInfoListList().hashCode();
    }
    if (getTakenRewardIndexListCount() > 0) {
      hash = (37 * hash) + TAKEN_REWARD_INDEX_LIST_FIELD_NUMBER;
      hash = (53 * hash) + getTakenRewardIndexListList().hashCode();
    }
    hash = (37 * hash) + OPEN_TIME_FIELD_NUMBER;
    hash = (53 * hash) + getOpenTime();
    hash = (37 * hash) + LAST_DIFFICULTY_ID_FIELD_NUMBER;
    hash = (53 * hash) + getLastDifficultyId();
    hash = (37 * hash) + IS_OPEN_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIsOpen());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code ChannellerSlabLoopDungeonStageInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:ChannellerSlabLoopDungeonStageInfo)
      io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.grasscutter.net.proto.activity.Activity.internal_static_ChannellerSlabLoopDungeonStageInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.grasscutter.net.proto.activity.Activity.internal_static_ChannellerSlabLoopDungeonStageInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo.class, io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo.Builder.class);
    }

    // Construct using io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getDungeonInfoListFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (dungeonInfoListBuilder_ == null) {
        dungeonInfoList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        dungeonInfoListBuilder_.clear();
      }
      takenRewardIndexList_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000002);
      openTime_ = 0;

      lastDifficultyId_ = 0;

      isOpen_ = false;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.grasscutter.net.proto.activity.Activity.internal_static_ChannellerSlabLoopDungeonStageInfo_descriptor;
    }

    @java.lang.Override
    public io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo getDefaultInstanceForType() {
      return io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo.getDefaultInstance();
    }

    @java.lang.Override
    public io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo build() {
      io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo buildPartial() {
      io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo result = new io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo(this);
      int from_bitField0_ = bitField0_;
      if (dungeonInfoListBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          dungeonInfoList_ = java.util.Collections.unmodifiableList(dungeonInfoList_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.dungeonInfoList_ = dungeonInfoList_;
      } else {
        result.dungeonInfoList_ = dungeonInfoListBuilder_.build();
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        takenRewardIndexList_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.takenRewardIndexList_ = takenRewardIndexList_;
      result.openTime_ = openTime_;
      result.lastDifficultyId_ = lastDifficultyId_;
      result.isOpen_ = isOpen_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo) {
        return mergeFrom((io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo other) {
      if (other == io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo.getDefaultInstance()) return this;
      if (dungeonInfoListBuilder_ == null) {
        if (!other.dungeonInfoList_.isEmpty()) {
          if (dungeonInfoList_.isEmpty()) {
            dungeonInfoList_ = other.dungeonInfoList_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDungeonInfoListIsMutable();
            dungeonInfoList_.addAll(other.dungeonInfoList_);
          }
          onChanged();
        }
      } else {
        if (!other.dungeonInfoList_.isEmpty()) {
          if (dungeonInfoListBuilder_.isEmpty()) {
            dungeonInfoListBuilder_.dispose();
            dungeonInfoListBuilder_ = null;
            dungeonInfoList_ = other.dungeonInfoList_;
            bitField0_ = (bitField0_ & ~0x00000001);
            dungeonInfoListBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDungeonInfoListFieldBuilder() : null;
          } else {
            dungeonInfoListBuilder_.addAllMessages(other.dungeonInfoList_);
          }
        }
      }
      if (!other.takenRewardIndexList_.isEmpty()) {
        if (takenRewardIndexList_.isEmpty()) {
          takenRewardIndexList_ = other.takenRewardIndexList_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureTakenRewardIndexListIsMutable();
          takenRewardIndexList_.addAll(other.takenRewardIndexList_);
        }
        onChanged();
      }
      if (other.getOpenTime() != 0) {
        setOpenTime(other.getOpenTime());
      }
      if (other.getLastDifficultyId() != 0) {
        setLastDifficultyId(other.getLastDifficultyId());
      }
      if (other.getIsOpen() != false) {
        setIsOpen(other.getIsOpen());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfo> dungeonInfoList_ =
      java.util.Collections.emptyList();
    private void ensureDungeonInfoListIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        dungeonInfoList_ = new java.util.ArrayList<io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfo>(dungeonInfoList_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfo, io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfo.Builder, io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfoOrBuilder> dungeonInfoListBuilder_;

    /**
     * <code>repeated .ChannellerSlabLoopDungeonInfo dungeon_info_list = 7;</code>
     */
    public java.util.List<io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfo> getDungeonInfoListList() {
      if (dungeonInfoListBuilder_ == null) {
        return java.util.Collections.unmodifiableList(dungeonInfoList_);
      } else {
        return dungeonInfoListBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .ChannellerSlabLoopDungeonInfo dungeon_info_list = 7;</code>
     */
    public int getDungeonInfoListCount() {
      if (dungeonInfoListBuilder_ == null) {
        return dungeonInfoList_.size();
      } else {
        return dungeonInfoListBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .ChannellerSlabLoopDungeonInfo dungeon_info_list = 7;</code>
     */
    public io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfo getDungeonInfoList(int index) {
      if (dungeonInfoListBuilder_ == null) {
        return dungeonInfoList_.get(index);
      } else {
        return dungeonInfoListBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .ChannellerSlabLoopDungeonInfo dungeon_info_list = 7;</code>
     */
    public Builder setDungeonInfoList(
        int index, io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfo value) {
      if (dungeonInfoListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDungeonInfoListIsMutable();
        dungeonInfoList_.set(index, value);
        onChanged();
      } else {
        dungeonInfoListBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .ChannellerSlabLoopDungeonInfo dungeon_info_list = 7;</code>
     */
    public Builder setDungeonInfoList(
        int index, io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfo.Builder builderForValue) {
      if (dungeonInfoListBuilder_ == null) {
        ensureDungeonInfoListIsMutable();
        dungeonInfoList_.set(index, builderForValue.build());
        onChanged();
      } else {
        dungeonInfoListBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .ChannellerSlabLoopDungeonInfo dungeon_info_list = 7;</code>
     */
    public Builder addDungeonInfoList(io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfo value) {
      if (dungeonInfoListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDungeonInfoListIsMutable();
        dungeonInfoList_.add(value);
        onChanged();
      } else {
        dungeonInfoListBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .ChannellerSlabLoopDungeonInfo dungeon_info_list = 7;</code>
     */
    public Builder addDungeonInfoList(
        int index, io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfo value) {
      if (dungeonInfoListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDungeonInfoListIsMutable();
        dungeonInfoList_.add(index, value);
        onChanged();
      } else {
        dungeonInfoListBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .ChannellerSlabLoopDungeonInfo dungeon_info_list = 7;</code>
     */
    public Builder addDungeonInfoList(
        io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfo.Builder builderForValue) {
      if (dungeonInfoListBuilder_ == null) {
        ensureDungeonInfoListIsMutable();
        dungeonInfoList_.add(builderForValue.build());
        onChanged();
      } else {
        dungeonInfoListBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .ChannellerSlabLoopDungeonInfo dungeon_info_list = 7;</code>
     */
    public Builder addDungeonInfoList(
        int index, io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfo.Builder builderForValue) {
      if (dungeonInfoListBuilder_ == null) {
        ensureDungeonInfoListIsMutable();
        dungeonInfoList_.add(index, builderForValue.build());
        onChanged();
      } else {
        dungeonInfoListBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .ChannellerSlabLoopDungeonInfo dungeon_info_list = 7;</code>
     */
    public Builder addAllDungeonInfoList(
        java.lang.Iterable<? extends io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfo> values) {
      if (dungeonInfoListBuilder_ == null) {
        ensureDungeonInfoListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dungeonInfoList_);
        onChanged();
      } else {
        dungeonInfoListBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .ChannellerSlabLoopDungeonInfo dungeon_info_list = 7;</code>
     */
    public Builder clearDungeonInfoList() {
      if (dungeonInfoListBuilder_ == null) {
        dungeonInfoList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        dungeonInfoListBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .ChannellerSlabLoopDungeonInfo dungeon_info_list = 7;</code>
     */
    public Builder removeDungeonInfoList(int index) {
      if (dungeonInfoListBuilder_ == null) {
        ensureDungeonInfoListIsMutable();
        dungeonInfoList_.remove(index);
        onChanged();
      } else {
        dungeonInfoListBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .ChannellerSlabLoopDungeonInfo dungeon_info_list = 7;</code>
     */
    public io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfo.Builder getDungeonInfoListBuilder(
        int index) {
      return getDungeonInfoListFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .ChannellerSlabLoopDungeonInfo dungeon_info_list = 7;</code>
     */
    public io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfoOrBuilder getDungeonInfoListOrBuilder(
        int index) {
      if (dungeonInfoListBuilder_ == null) {
        return dungeonInfoList_.get(index);  } else {
        return dungeonInfoListBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .ChannellerSlabLoopDungeonInfo dungeon_info_list = 7;</code>
     */
    public java.util.List<? extends io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfoOrBuilder> 
         getDungeonInfoListOrBuilderList() {
      if (dungeonInfoListBuilder_ != null) {
        return dungeonInfoListBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(dungeonInfoList_);
      }
    }
    /**
     * <code>repeated .ChannellerSlabLoopDungeonInfo dungeon_info_list = 7;</code>
     */
    public io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfo.Builder addDungeonInfoListBuilder() {
      return getDungeonInfoListFieldBuilder().addBuilder(
          io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .ChannellerSlabLoopDungeonInfo dungeon_info_list = 7;</code>
     */
    public io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfo.Builder addDungeonInfoListBuilder(
        int index) {
      return getDungeonInfoListFieldBuilder().addBuilder(
          index, io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .ChannellerSlabLoopDungeonInfo dungeon_info_list = 7;</code>
     */
    public java.util.List<io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfo.Builder> 
         getDungeonInfoListBuilderList() {
      return getDungeonInfoListFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfo, io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfo.Builder, io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfoOrBuilder> 
        getDungeonInfoListFieldBuilder() {
      if (dungeonInfoListBuilder_ == null) {
        dungeonInfoListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfo, io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfo.Builder, io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonInfoOrBuilder>(
                dungeonInfoList_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        dungeonInfoList_ = null;
      }
      return dungeonInfoListBuilder_;
    }

    private com.google.protobuf.Internal.IntList takenRewardIndexList_ = emptyIntList();
    private void ensureTakenRewardIndexListIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        takenRewardIndexList_ = mutableCopy(takenRewardIndexList_);
        bitField0_ |= 0x00000002;
       }
    }
    /**
     * <code>repeated uint32 taken_reward_index_list = 13;</code>
     * @return A list containing the takenRewardIndexList.
     */
    public java.util.List<java.lang.Integer>
        getTakenRewardIndexListList() {
      return ((bitField0_ & 0x00000002) != 0) ?
               java.util.Collections.unmodifiableList(takenRewardIndexList_) : takenRewardIndexList_;
    }
    /**
     * <code>repeated uint32 taken_reward_index_list = 13;</code>
     * @return The count of takenRewardIndexList.
     */
    public int getTakenRewardIndexListCount() {
      return takenRewardIndexList_.size();
    }
    /**
     * <code>repeated uint32 taken_reward_index_list = 13;</code>
     * @param index The index of the element to return.
     * @return The takenRewardIndexList at the given index.
     */
    public int getTakenRewardIndexList(int index) {
      return takenRewardIndexList_.getInt(index);
    }
    /**
     * <code>repeated uint32 taken_reward_index_list = 13;</code>
     * @param index The index to set the value at.
     * @param value The takenRewardIndexList to set.
     * @return This builder for chaining.
     */
    public Builder setTakenRewardIndexList(
        int index, int value) {
      ensureTakenRewardIndexListIsMutable();
      takenRewardIndexList_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated uint32 taken_reward_index_list = 13;</code>
     * @param value The takenRewardIndexList to add.
     * @return This builder for chaining.
     */
    public Builder addTakenRewardIndexList(int value) {
      ensureTakenRewardIndexListIsMutable();
      takenRewardIndexList_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated uint32 taken_reward_index_list = 13;</code>
     * @param values The takenRewardIndexList to add.
     * @return This builder for chaining.
     */
    public Builder addAllTakenRewardIndexList(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureTakenRewardIndexListIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, takenRewardIndexList_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated uint32 taken_reward_index_list = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearTakenRewardIndexList() {
      takenRewardIndexList_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }

    private int openTime_ ;
    /**
     * <code>uint32 open_time = 2;</code>
     * @return The openTime.
     */
    @java.lang.Override
    public int getOpenTime() {
      return openTime_;
    }
    /**
     * <code>uint32 open_time = 2;</code>
     * @param value The openTime to set.
     * @return This builder for chaining.
     */
    public Builder setOpenTime(int value) {
      
      openTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 open_time = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearOpenTime() {
      
      openTime_ = 0;
      onChanged();
      return this;
    }

    private int lastDifficultyId_ ;
    /**
     * <code>uint32 last_difficulty_id = 11;</code>
     * @return The lastDifficultyId.
     */
    @java.lang.Override
    public int getLastDifficultyId() {
      return lastDifficultyId_;
    }
    /**
     * <code>uint32 last_difficulty_id = 11;</code>
     * @param value The lastDifficultyId to set.
     * @return This builder for chaining.
     */
    public Builder setLastDifficultyId(int value) {
      
      lastDifficultyId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 last_difficulty_id = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearLastDifficultyId() {
      
      lastDifficultyId_ = 0;
      onChanged();
      return this;
    }

    private boolean isOpen_ ;
    /**
     * <code>bool is_open = 14;</code>
     * @return The isOpen.
     */
    @java.lang.Override
    public boolean getIsOpen() {
      return isOpen_;
    }
    /**
     * <code>bool is_open = 14;</code>
     * @param value The isOpen to set.
     * @return This builder for chaining.
     */
    public Builder setIsOpen(boolean value) {
      
      isOpen_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool is_open = 14;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsOpen() {
      
      isOpen_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:ChannellerSlabLoopDungeonStageInfo)
  }

  // @@protoc_insertion_point(class_scope:ChannellerSlabLoopDungeonStageInfo)
  private static final io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo();
  }

  public static io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ChannellerSlabLoopDungeonStageInfo>
      PARSER = new com.google.protobuf.AbstractParser<ChannellerSlabLoopDungeonStageInfo>() {
    @java.lang.Override
    public ChannellerSlabLoopDungeonStageInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ChannellerSlabLoopDungeonStageInfo(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ChannellerSlabLoopDungeonStageInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ChannellerSlabLoopDungeonStageInfo> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.grasscutter.net.proto.activity.ChannellerSlabLoopDungeonStageInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

